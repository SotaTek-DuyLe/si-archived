#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

image: mcr.microsoft.com/dotnet/core/sdk:3.1

pipelines:
  custom:
    Run junit report:
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0
              - dotnet test --logger:"junit" --settings test.runsettings
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'

    Run custom test:
      - variables:
            - name: TestName
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - echo "Running test named " $env:TestName
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0l
              - dotnet add package NUnit.Allure --version 1.2.1.1
              - dotnet test --filter Name~$env:TestName --logger:"junit" --settings test.runsettings
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'

    Run custom test class:
      - variables:
            - name: TestClass
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - echo "Running class named " $env:TestClass
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0
              - dotnet add package NUnit.Allure --version 1.2.1.1
              - dotnet test --filter FullyQualifiedName~si_automated_tests.Source.Test.$env:TestClass --logger:"junit" --settings test.runsettings
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'

    Run custom test category:
      - variables:
            - name: TestCategory
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - echo "Running Category named " $env:TestCategory
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0
              - dotnet add package NUnit.Allure --version 1.2.1.1
              - dotnet test --filter TestCategory=$env:TestCategory --logger:"junit" --settings test.runsettings
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'
    Run test on custom environment:
      - variables:
            - name: TestUrl
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - echo "Running on environment " $env:TestEnv
              - $env:SCRIPTT='TestRunParameters.Parameter(name=\\\"url\\\", value=\\\"'+$env:TestUrl+'\\\")'
              - echo $env:SCRIPTT
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0
              - dotnet add package NUnit.Allure --version 1.2.1.1
              - dotnet test --logger:"junit" --settings test.runsettings -- "$env:SCRIPTT"
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'

    Run test on custom environment and db creds:
      - variables:
            - name: TestUrl
            - name: TestHost
            - name: IntegratedSecurity
            - name: DbName
            - name: DbUser
            - name: DbPass
      - step:
            runs-on:
              - self.hosted
              - windows
            script:
              - echo "Running on environment " $env:TestEnv
              - $env:SCRIPT0='TestRunParameters.Parameter(name=\\\"url\\\", value=\\\"'+$env:TestUrl+'\\\")'
              - $env:SCRIPT1='TestRunParameters.Parameter(name=\\\"host\\\", value=\\\"'+$env:TestHost+'\\\")'
              - $env:SCRIPT2='TestRunParameters.Parameter(name=\\\"useIntegratedSecurity\\\", value=\\\"'+$env:IntegratedSecurity+'\\\")'
              - $env:SCRIPT3='TestRunParameters.Parameter(name=\\\"dbname\\\", value=\\\"'+$env:DbName+'\\\")'
              - $env:SCRIPT4='TestRunParameters.Parameter(name=\\\"dbusername\\\", value=\\\"'+$env:DbUser+'\\\")'
              - $env:SCRIPT5='TestRunParameters.Parameter(name=\\\"dbpassword\\\", value=\\\"'+$env:DbPass+'\\\")'
              - echo $env:SCRIPT0
              - echo $env:SCRIPT1
              - echo $env:SCRIPT2
              - echo $env:SCRIPT3
              - echo $env:SCRIPT4
              - echo $env:SCRIPT5
              - dotnet clean
              - dotnet restore
              - cd si-automated-tests
              - dotnet add package JUnitTestLogger --version 1.1.0
              - dotnet add package NUnit.Allure --version 1.2.1.1
              - dotnet test --logger:"junit" --settings test.runsettings -- "$env:SCRIPT0" -- "$env:SCRIPT1" -- "$env:SCRIPT2" -- "$env:SCRIPT3" -- "$env:SCRIPT4" -- "$env:SCRIPT5"
            after-script:
            - allure generate ../OutputDebug/allure-results -o TestResults/allure-reports --clean
            artifacts:
              - '*/TestResults/Screenshots/*.png'
              - '*/TestResults/allure-reports/*'
              
  default:
    - parallel:
        - step:
            name: Build
            caches:
              - dotnetcore
            script:
              - dotnet restore
              - dotnet build --no-restore
