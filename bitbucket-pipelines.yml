#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

image: mcr.microsoft.com/dotnet/core/sdk:3.1

pipelines:
  custom:
    manual run:
      - step:
            caches:
              - dotnetcore
            runs-on:
              - windows
            script:
              - dotnet restore
              - dotnet build --no-restore
              - REPORTS_PATH="TestResults/build_${BITBUCKET_BUILD_NUMBER}"
              - echo $REPORTS_PATH
              - cd si-automated-tests
              - dotnet test --logger:"trx;LogFilePath=$REPORTS_PATH/TestOutput.xml" -s test.runsettings
              
  default:
    - parallel:
        - step:
            name: Build
            caches:
              - dotnetcore
            script:
              - dotnet restore
              - dotnet build --no-restore
        - step:
            name: Test
            trigger: manual
            caches:
              - dotnetcore
            script:
              - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
              - cd si-automated-tests
              - dotnet test --no-build --test-adapter-path:. --logger:"trx;LogFilePath=$REPORTS_PATH/TestOutput.xml" -s test.runsettings
        - step:
            name: Lint the code
            caches:
              - dotnetcore
            script:
              - export SOLUTION_NAME=si-automated-tests
              - export REPORTS_PATH=linter-reports
              - dotnet new tool-manifest
              - dotnet tool install JetBrains.ReSharper.GlobalTools
              - dotnet tool restore
              - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
            artifacts:
              - linter-reports/**
